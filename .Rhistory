boxplot( Y[,2] ~ x[labels_z])
boxplot( Y[,3] ~ x[labels_z])
#-- Fit the multiMarker model to the intervention study data --#
# Number of iterations (and burnIn) set small for example.
modM <- multiMarker(y = Y, quantities = quantities,
niter = 10000, burnIn = 30,
posteriors = TRUE)
# Number of iterations (and burnIn) set small for example.
predM <- predict(modM, y = YNew, niter = 10000, burnIn = 30,
posteriors = TRUE)
mario <- lm( x[labels_z] ~ Y)
m2 <- mario$coefficients[1] + mario$coefficients[2]*YNew[,1]
+ mario$coefficients[3]*YNew[,2]  + mario$coefficients[4]*YNew[,3]
mean(abs(m2 -zNew))
library(pls)
ppp <- plsr( x[labels_z] ~ Y)
ppp2 <- apply(predict(ppp, newdata = YNew),c(1,2), mean)
mean(abs(ppp2 -zNew))
mean(abs(predM$predictions$ZPred_P[1,] -zNew))
par(mfrow =c(2,2))
plot(predM$predictions$ZPred_P[1,] -zNew, pch = 19, ylim = c(-200, 200))
abline(h= 0)
plot(ppp2 -zNew, pch = 19, ylim = c(-200, 200))
abline(h= 0)
plot(m2 -zNew, pch = 19, ylim = c(-200, 200))
abline(h= 0)
par(mfrow =c(1,2))
boxplot( z ~ x[labels_z])
par(mfrow =c(1,2))
boxplot( z ~ x[labels_z])
boxplot( zNew ~ x2[labels_zNew])
plot(predM$predictions$ZPred_P[1,], zNew, pch=19)
abline(0,1)
plot(ppp2, zNew, pch=19)
abline(0,1)
plot(predM$predictions$ZPred_P[1,], zNew, pch=19,asp=1)
abline(0,1)
plot(ppp2, zNew, pch=19, asp=1)
abline(0,1)
predM$predictions$ZPred_P[1,]
x
x2
zNew
range(z)
predM$predictions$Prob_P
apply(predM$predictions$Prob_P,1,which.max)
apply(predM$predictions$Prob_P[,,1],1,which.max)
labels_zNew
library(mclust)
adjustedRandIndex(apply(predM$predictions$Prob_P[,,1],1,which.max), labels_zNew)
#########JAGS
dat.jags <- list(Y = Y, c = c(labels_z[1:90], rep(NA, 9)),
N = n, P = P, D = D, x = x)
n
#########JAGS
Y3 <- rbind(Y, YNew)
dim(Y3)
labels_z
dat.jags <- list(Y = Y3, c = c(labels_z, rep(NA, 20)),
N = 70, P = P, D = D, x = x)
# Fit JAGS model ---------------------------------------------------------------
mod.jags <- "
model{
for(i in 1:N) {
for(p in 1:P) {
Y[i,p] ~ dnorm(alpha[p] + beta[p]*z[i], 1/var_y[p]) T(0,)
}
c[i] ~ dcat(pi[]) # only observed for first 90 observations
z[i] ~ dnorm(mu_z[c[i]], 1/var_z[c[i]]) T(0,)
}
# Mixture model parameters
for(d in 1:D) {
mu_z[d] <- x[d]
sd_z[d] ~ dgamma(1e-3,1e-3)
var_z[d] <- pow(sd_z[d],2)
}
# Priors
pi ~ ddirich(rep(1,D))
for(p in 1:P) {
alpha[p] ~ dnorm(0,1e-2) T(0,)
beta[p] ~ dnorm(0,1e-2) T(0,)
sd_y[p] ~ dgamma(1e-3,1e-3)
var_y[p] <- pow(sd_y[p],2)
}
z_pred <- z[91:99] # Food intake levels for the predictions
c_pred <- c[91:99] # Food intake labels for the predictions
}"
#########JAGS
Y3 <- rbind(Y, YNew)
dat.jags <- list(Y = Y3, c = c(labels_z, rep(NA, 20)),
N = 70, P = P, D = D, x = x)
# Fit JAGS model ---------------------------------------------------------------
mod.jags <- "
model{
for(i in 1:N) {
for(p in 1:P) {
Y[i,p] ~ dnorm(alpha[p] + beta[p]*z[i], 1/var_y[p]) T(0,)
}
c[i] ~ dcat(pi[]) # only observed for first 90 observations
z[i] ~ dnorm(mu_z[c[i]], 1/var_z[c[i]]) T(0,)
}
# Mixture model parameters
for(d in 1:D) {
mu_z[d] <- x[d]
sd_z[d] ~ dgamma(1e-3,1e-3)
var_z[d] <- pow(sd_z[d],2)
}
# Priors
pi ~ ddirich(rep(1,D))
for(p in 1:P) {
alpha[p] ~ dnorm(0,1e-2) T(0,)
beta[p] ~ dnorm(0,1e-2) T(0,)
sd_y[p] ~ dgamma(1e-3,1e-3)
var_y[p] <- pow(sd_y[p],2)
}
z_pred <- z[51:70] # Food intake levels for the predictions
c_pred <- c[51:70] # Food intake labels for the predictions
}"
fit.jags <- run.jags(mod.jags, n.chains = 1, sample = 10000, thin = 1,
monitor = monitor.var, burnin = 4000, adapt = 1000,
data = dat.jags)
install.packages("runjags")
#########JAGS
library(runjags)
Y3 <- rbind(Y, YNew)
dat.jags <- list(Y = Y3, c = c(labels_z, rep(NA, 20)),
N = 70, P = P, D = D, x = x)
# Fit JAGS model ---------------------------------------------------------------
mod.jags <- "
model{
for(i in 1:N) {
for(p in 1:P) {
Y[i,p] ~ dnorm(alpha[p] + beta[p]*z[i], 1/var_y[p]) T(0,)
}
c[i] ~ dcat(pi[]) # only observed for first 90 observations
z[i] ~ dnorm(mu_z[c[i]], 1/var_z[c[i]]) T(0,)
}
# Mixture model parameters
for(d in 1:D) {
mu_z[d] <- x[d]
sd_z[d] ~ dgamma(1e-3,1e-3)
var_z[d] <- pow(sd_z[d],2)
}
# Priors
pi ~ ddirich(rep(1,D))
for(p in 1:P) {
alpha[p] ~ dnorm(0,1e-2) T(0,)
beta[p] ~ dnorm(0,1e-2) T(0,)
sd_y[p] ~ dgamma(1e-3,1e-3)
var_y[p] <- pow(sd_y[p],2)
}
z_pred <- z[51:70] # Food intake levels for the predictions
c_pred <- c[51:70] # Food intake labels for the predictions
}"
fit.jags <- run.jags(mod.jags, n.chains = 1, sample = 10000, thin = 1,
monitor = monitor.var, burnin = 4000, adapt = 1000,
data = dat.jags)
monitor.var <- c("alpha", "beta", "pi", "var_z", "z_pred", "c_pred")
fit.jags <- run.jags(mod.jags, n.chains = 1, sample = 10000, thin = 1,
monitor = monitor.var, burnin = 4000, adapt = 1000,
data = dat.jags)
fit.jags <- run.jags(mod.jags, n.chains = 1, sample = 10000, thin = 1,
monitor = monitor.var, burnin = 4000, adapt = 1000,
data = dat.jags)
library(runjags)
Y3 <- rbind(Y, YNew)
dat.jags <- list(Y = Y3, c = c(labels_z, rep(NA, 20)),
N = 70, P = P, D = D, x = x)
# Fit JAGS model ---------------------------------------------------------------
mod.jags <- "
model{
for(i in 1:N) {
for(p in 1:P) {
Y[i,p] ~ dnorm(alpha[p] + beta[p]*z[i], 1/var_y[p]) T(0,)
}
c[i] ~ dcat(pi[]) # only observed for first 90 observations
z[i] ~ dnorm(mu_z[c[i]], 1/var_z[c[i]]) T(0,)
}
# Mixture model parameters
for(d in 1:D) {
mu_z[d] <- x[d]
sd_z[d] ~ dgamma(1e-3,1e-3)
var_z[d] <- pow(sd_z[d],2)
}
# Priors
pi ~ ddirich(rep(1,D))
for(p in 1:P) {
alpha[p] ~ dnorm(0,1e-2) T(0,)
beta[p] ~ dnorm(0,1e-2) T(0,)
sd_y[p] ~ dgamma(1e-3,1e-3)
var_y[p] <- pow(sd_y[p],2)
}
z_pred <- z[51:70] # Food intake levels for the predictions
c_pred <- c[51:70] # Food intake labels for the predictions
}"
monitor.var <- c("alpha", "beta", "pi", "var_z", "z_pred", "c_pred")
fit.jags <- run.jags(mod.jags, n.chains = 1, sample = 10000, thin = 1,
monitor = monitor.var, burnin = 4000, adapt = 1000,
data = dat.jags)
fit.jags <- run.jags(mod.jags, n.chains = 1, sample = 1000, thin = 1,
monitor = monitor.var, burnin = 400, adapt = 100,
data = dat.jags)
sumjags <- summary(fit.jags)
knitr::kable(sumjags[, -c(7, 8, 11)], digits = 3)
sumjags[, -c(7, 8, 11)]
sumjags[, 2]
length(sumjags[, 2]
)
sumjags[33:52, 2]
adjustedRandIndex(sumjags[33:52, 2], labels_zNew)
sumjags[13:32, 2]
mean(abs(sumjags[13:32, 2]-zNew))
plot(zNew, sumjags[13:32, 2])
fit.jags <- run.jags(mod.jags, n.chains = 1, sample = 5000, thin = 1,
monitor = monitor.var, burnin = 1000, adapt = 100,
data = dat.jags)
sumjags <- summary(fit.jags)
adjustedRandIndex(sumjags[33:52, 2], labels_zNew)
mean(abs(sumjags[13:32, 2]-zNew))
plot(zNew, sumjags[13:32, 2])
sumjags[13:32, 2]
efefnw
rnorm(10000)
library(blogdown)
serve_site()
stop_server()
serve_site()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
library(spaceNet)
install.packages("spaceNet")
library(spaceNet)
?multiNet
library(dlstats)
install.packages("dlstats")
library(dlstats)
install.packages("ellipsis")
library(dlstats)
coso <- cran_stats(c("spaceNet", "multiMarker"))
coso
plot(coso$downloads, col = coso$package, pch = 19)
library(igraph)
g <- make_bipartite_graph( rep(0:1,length=10), c(1:10))
print(g, v=TRUE)
plot(g)
?make_bipartite_graph
g <- make_bipartite_graph( c(rep(1, 5), rep(2,5)), rep(0:1,length=10), c(1:10))
rep(0:1,length=10)
g <- make_bipartite_graph( c(rep(1, 5), rep(2,5)),  c(1:10))
g <- make_bipartite_graph( c(rep(1, 5), rep(2,5)),  c(1:5))
library(igraph)
set.seed(123)
# generate random bipartite graph.
g <- sample_bipartite(10, 5, p=.4)
# check the type attribute:
V(g)$type
# define color and shape mappings.
col <- c("steelblue", "orange")
shape <- c("circle", "square")
plot(g,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1]
)
g2 <- sample_bipartite(10, 5, p=.4)
plot(g2,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1]
)
plot(g2,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1], main = "t = 2"
)
plot(g,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1], main = "t = 1"
)
plot(g2,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1], main = "t = 2"
)
# define color and shape mappings.
col <- c("#b2df8a", "#cab2d6")
shape <- c("circle", "square")
plot(g,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1], main = "t = 1"
)
# define color and shape mappings.
col <- c("#d6604d", "#4393c3")
shape <- c("circle", "square")
plot(g,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1], main = "t = 1"
)
plot(g2,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1], main = "t = 2"
)
plot(g,
vertex.color = col[as.numeric(V(g)$type)+1],
vertex.shape = shape[as.numeric(V(g)$type)+1], main = "t = 1"
)
library(multiMarker)
?multiMarker
library(truncnorm)
P <- D <- 3; n <- 50
alpha <- rtruncnorm(P, 0, Inf, 4, 1)
beta <- rtruncnorm(P, 0, Inf, 0.001, 0.1)
x <- c(50, 100, 150)
labels_z <- sample(c(1,2,3), n, replace = TRUE)
quantities <- x[labels_z]
sigma_d <- 8
z <- rtruncnorm(n, 0, Inf, x[labels_z], sigma_d)
Y <- sapply( 1:P, function(p) sapply( 1:n, function(i)
max(0, alpha[p] + beta[p]*z[i] + rnorm( 1, 0, 5) ) ) )
View(Y)
colnames(Y) <-c("marker 1", "marker 2", "marker 3")
View(Y)
modM <- multiMarker(y = Y, quantities = quantities,
niter = 10000, burnIn = 3000,
posteriors = TRUE)
# niter and burnIn values are low only for example purposes
nNew <- 20
labels_zNew <- sample(c(1,2,3), nNew, replace = TRUE)
zNew <- rtruncnorm(nNew, 0, Inf, x[labels_zNew], sigma_d)
YNew <- sapply( 1:P, function(p) sapply( 1:nNew, function(i)
max(0, alpha[p] + beta[p]*zNew[i] + rnorm( 1, 0, 5) ) ) )
predM <- predict(modM, y = YNew, niter = 100, burnIn = 30,
posteriors = TRUE)
#-- Example of posterior predictive plots --#
obs_j <- 3 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 50,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7,
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
abline( v = predM$predictions$ZPred_P[1,obs_j], col = "darkred",
lwd = 2 ) # median value
predM <- predict(modM, y = YNew, niter = 10000, burnIn = 3000,
posteriors = TRUE)
zNew
#-- Example of posterior predictive plots --#
obs_j <- 3 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 50,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7,
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
#-- Example of posterior predictive plots --#
obs_j <- 2 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 50,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7,
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
#-- Example of posterior predictive plots --#
obs_j <- 1 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 50,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7,
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
predM$predictions$ZPred_P[1,obs_j]
plot(predM$predictions$ZPred_P[1,], zNew, pch = 19)
abline(0,1)
text(predM$predictions$ZPred_P[1,], zNew, seq(1,20))
#-- Example of posterior predictive plots --#
obs_j <- 4 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 50,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7,
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
#-- Example of posterior predictive plots --#
obs_j <- 5 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 50,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7,
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
obs_j <- 5 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7, ylim = c(0, 200)
freq = FALSE)
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7, ylim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
#-- Example of posterior predictive plots --#
obs_j <- 5 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 2, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7, ylim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake",
main = "Posterior predictive distribution \nof intake",
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
segments( predM$predictions$ZPred_P[1,obs_j], 0,
predM$predictions$ZPred_P[1,obs_j], 0.02,col = "darkred",
lwd = 2 ) # median value
segments( predM$predictions$ZPred_P[1,obs_j], 0,
predM$predictions$ZPred_P[1,obs_j], 0.022,col = "darkred",
lwd = 2 ) # median value
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake",
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
segments( predM$predictions$ZPred_P[1,obs_j], 0,
predM$predictions$ZPred_P[1,obs_j], 0.022,col = "darkred",
lwd = 2 ) # median value
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake", main = ""
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake", main = "",
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
par(mfrow=c(1,1), oma = c(0, 0, 1, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake", main = "",
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
segments( predM$predictions$ZPred_P[1,obs_j], 0,
predM$predictions$ZPred_P[1,obs_j], 0.022,col = "darkred",
lwd = 2 ) # median value
par(mfrow=c(1,1), oma = c(0, 0, 0, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake", main = "",
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
segments( predM$predictions$ZPred_P[1,obs_j], 0,
predM$predictions$ZPred_P[1,obs_j], 0.022,col = "darkred",
lwd = 2 ) # median value
abline( v = predM$predictions$ZPred_P[3,obs_j], col = "grey",
lwd = 2 )
segments( predM$predictions$ZPred_P[3,obs_j], 0,
predM$predictions$ZPred_P[3,obs_j], 0.022,col = "grey",
lwd = 2 ) # median value
segments( predM$predictions$ZPred_P[4,obs_j], 0,
predM$predictions$ZPred_P[4,obs_j], 0.022,col = "grey",
lwd = 2 ) # median value
legend( x = "topleft", fill = c("grey", "darkred"), title = "quantiles:",
legend = c("(0.025, 0.975)", "0.5"), bty = "n", cex = 0.7)
legend( x = "topright", fill = c("grey", "darkred"), title = "quantiles:",
legend = c("(0.025, 0.975)", "0.5"), bty = "n", cex = 0.7)
obs_j <- 5 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 0, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake", main = "",
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
segments( predM$predictions$ZPred_P[1,obs_j], 0,
predM$predictions$ZPred_P[1,obs_j], 0.022,col = "darkred",
lwd = 2 ) # median value
segments( predM$predictions$ZPred_P[3,obs_j], 0,
predM$predictions$ZPred_P[3,obs_j], 0.022,col = "grey",
lwd = 2 ) # median value
segments( predM$predictions$ZPred_P[4,obs_j], 0,
predM$predictions$ZPred_P[4,obs_j], 0.022,col = "grey",
lwd = 2 ) # median value
legend( x = "topright", fill = c("grey", "darkred"), title = "quantiles:",
legend = c("(0.025, 0.975)", "0.5"), bty = "n", cex = 0.7)
obs_j <- 5 # choose which observation to look at
par(mfrow=c(1,1), oma = c(0, 0, 0, 0))
hist(predM$chains$ZPRED[obs_j, ], breaks = 70,
ylab = "Density", xlab = "Intake (grams)", main = "",
cex.main = 0.7, xlim = c(0, 200),
freq = FALSE) # Posterior predictive distribution of intake for observation obs_j
segments( predM$predictions$ZPred_P[1,obs_j], 0,
predM$predictions$ZPred_P[1,obs_j], 0.022,col = "darkred",
lwd = 2 ) # median value
segments( predM$predictions$ZPred_P[3,obs_j], 0,
predM$predictions$ZPred_P[3,obs_j], 0.022,col = "grey",
lwd = 2 ) # median value
segments( predM$predictions$ZPred_P[4,obs_j], 0,
predM$predictions$ZPred_P[4,obs_j], 0.022,col = "grey",
lwd = 2 ) # median value
legend( x = "topright", fill = c("grey", "darkred"), title = "quantiles:",
legend = c("(0.025, 0.975)", "0.5"), bty = "n", cex = 0.7)
View(YNew)
colnames(YNew) <- colnames(Y)
View(YNew)
install.packages("blogdown")
library(blogdown)
serve_site()
serve_site()
serve_site()
stop_server()
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
